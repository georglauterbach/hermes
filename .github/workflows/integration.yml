---
name: Integration
run-name: Integration

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ code/**, .github/** ]
    tags: [ '*.*.*' ]
  pull_request:
    branches: [ '**' ]
    paths: [ code/**, .github/** ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: docker.io/rust:1.90.0-slim-trixie

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Build-Output
        uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-x86_64
          path: code/target_x86_64/

      - name: Cache Build-Output
        uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-aarch64
          path: code/target_aarch64/

      - name: Build and Test

        run: |
            set -e
            cd code

            apt-get --yes --quiet=2 update
            apt-get --yes install gcc gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

            export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl
            export CARGO_TARGET_DIR=target_x86_64
            export CARGO_HOME=target_x86_64/cargo_home
            export RUSTUP_HOME=target_x86_64/rustup_home

            cargo fmt    --all                              -- --check
            cargo clippy --workspace --quiet --all-features -- -D warnings
            cargo doc    --workspace --quiet --no-deps --document-private-items

            cargo run              --package cupid
            cargo build  --release --package hermes

            cp ../.assets/archive.tar.xz "${CARGO_TARGET_DIR}"

            export CARGO_BUILD_TARGET=aarch64-unknown-linux-musl
            export CARGO_TARGET_DIR=target_aarch64
            export CARGO_HOME=target_aarch64/cargo_home
            export RUSTUP_HOME=target_aarch64/rustup_home

            cargo build --release --package hermes

  publish:
    name: Publish
    runs-on: ubuntu-latest

    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Cache for Build-Output (x86_64)
        uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-x86_64
          path: code/target_x86_64/

      - name: Load Cache for Build-Output (aarch64)
        uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-aarch64
          path: code/target_aarch64/

      - name: Prepare Binaries
        run: |
          cp code/target_aarch64/aarch64-unknown-linux-musl/release/hermes \
            code/target_aarch64/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl

          cp code/target_x86_64/x86_64-unknown-linux-musl/release/hermes \
            code/target_x86_64/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl

          cp code/target_x86_64/archive.tar.xz \
            code/target_x86_64/hermes-${{ github.ref_name }}.tar.xz

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            code/target_aarch64/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl
            code/target_x86_64/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl
            code/target_x86_64/hermes-${{ github.ref_name }}.tar.xz
