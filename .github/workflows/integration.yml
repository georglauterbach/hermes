---
name: Integration
run-name: Integration

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ code/**, .github/** ]
    tags: [ '*.*.*' ]
  pull_request:
    branches: [ '**' ]
    paths: [ code/**, .github/** ]

defaults:
  run:
    shell: bash

jobs:
  build_x86_64:
    name: Build x86_64
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-x86_64
          path: code/target_x86_64/

      - name: Build and Test
        uses: devcontainers/ci@v0.3
        with:
          push: never
          configFile: .devcontainer/development/devcontainer.json
          env: |
            CARGO_BUILD_TARGET=x86_64-unknown-linux-musl
            CARGO_BUILD_TARGET_DIR=target_x86_64
            CARGO_HOME=target_x86_64/cargo_home
            RUSTUP_HOME=target_x86_64/rustup_home
          runCmd: |
            set -e ; cd code ; mkdir -p ${CARGO_HOME}

            cargo fmt    -- --check
            cargo clippy --all-features -- -D warnings
            cargo doc    --document-private-items
            cargo test
            cargo build  --release

  build_aarch64:
    name: Build aarch64
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-aarch64
          path: code/target_aarch64/

      - name: Build
        uses: devcontainers/ci@v0.3
        with:
          push: never
          configFile: .devcontainer/development/devcontainer.json
          env: |
            CARGO_BUILD_TARGET=aarch64-unknown-linux-musl
            CARGO_BUILD_TARGET_DIR=target_aarch64
            CARGO_HOME=target_aarch64/cargo_home
            RUSTUP_HOME=target_aarch64/rustup_home
          runCmd: |
            set -e ; cd code ; mkdir -p ${CARGO_HOME}

            sudo apt-get --yes --quiet=2 update
            sudo apt-get --yes install gcc gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

            cargo build --release

  publish:
    name: Publish
    runs-on: ubuntu-latest

    needs: [ build_aarch64, build_x86_64 ]
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-x86_64
          path: code/target_x86_64/

      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}-aarch64
          path: code/target_aarch64/

      - name: Prepare Binaries
        run: |
          ls -lh code/ || :
          ls -lh code/target_aarch64 || :
          ls -lh code/target_aarch64/aarch64-unknown-linux-musl/release || :
          ls -lh code/target_x86_64 || :
          ls -lh code/target_x86_64/x86_64-unknown-linux-musl/release || :

          cp code/target_aarch64/aarch64-unknown-linux-musl/release/hermes \
            code/target_aarch64/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl

          cp code/target_x86_64/x86_64-unknown-linux-musl/release/hermes \
            code/target_x86_64/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            code/target_aarch64/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl
            code/target_x86_64/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl
