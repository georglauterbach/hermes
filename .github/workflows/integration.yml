---
name: Integration
run-name: Integration

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ code/**, .github/** ]
    tags: [ '*.*.*' ]
  pull_request:
    branches: [ '**' ]
    paths: [ code/**, .github/** ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: docker.io/rust:1.90.0-slim-trixie

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Packages
        run: |
          apt-get --yes --quiet=2 update
          apt-get --yes install binutils-aarch64-linux-gnu gcc gcc-aarch64-linux-gnu musl-tools pkg-config zstd

      - name: Cache Artifacts
        uses: actions/cache@v4
        with:
          key: artifacts-${{ github.ref }}
          path: code/target/.artifacts

      - name: Lint
        run: |
          cd code

          cargo fmt    --all                              -- --check
          cargo clippy --workspace --quiet --all-features -- -D warnings
          cargo doc    --workspace --quiet --no-deps --document-private-items

      - name: Build
        run: |
          cd code

          cargo run --package cupid -- --architecture x86-64
          cargo run --package cupid -- --architecture aarch64

          export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl
          export CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_LINKER=x86_64-linux-musl-gcc
          cargo build --release --package hermes

          export CARGO_BUILD_TARGET=aarch64-unknown-linux-musl
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-gnu-gcc
          cargo build --release --package hermes

      - name: Place Artifacts in Cache
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd code/target ; mkdir -p .artifacts ;

          cp ../../.assets/x86_64/archive.tar.xz       .artifacts/hermes-${{ github.ref_name }}-x86_64.tar.xz
          cp aarch64-unknown-linux-musl/release/hermes .artifacts/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl
          cp ../../.assets/aarch64/archive.tar.xz      .artifacts/hermes-${{ github.ref_name }}-aarch64.tar.xz
          cp x86_64-unknown-linux-musl/release/hermes  .artifacts/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl

  publish:
    name: Publish
    runs-on: ubuntu-latest

    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Cache with Artifacts
        uses: actions/cache@v4
        with:
          key: artifacts-${{ github.ref }}
          path: code/target/.artifacts
          fail-on-cache-miss: true

      - name: Publish Artifacts to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            code/target/.artifacts/hermes-${{ github.ref_name }}-x86_64.tar.xz
            code/target/.artifacts/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl
            code/target/.artifacts/hermes-${{ github.ref_name }}-aarch64.tar.xz
            code/target/.artifacts/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl
