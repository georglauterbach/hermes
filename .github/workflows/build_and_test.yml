---
name: Build and Test
run-name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  CARGO_HOME: target/cargo/home
  RUSTUP_HOME: target/rustup/home

jobs:
  build_x86_64:
    name: Build x86_64
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: code/target/
          key: ${{ github.ref }}

      - name: Build and Test
        uses: devcontainers/ci@v0.3
        with:
          push: never
          configFile: .devcontainer/development/devcontainer.json
          env: |
            CARGO_HOME=${{ env.CARGO_HOME }}
            RUSTUP_HOME=${{ env.RUSTUP_HOME }}
          runCmd: |
            cd code
            cargo fmt    --quiet -- --check
            cargo clippy --quiet --target x86_64-unknown-linux-musl --all-features -- -D warnings
            cargo doc    --quiet --target x86_64-unknown-linux-musl --document-private-items
            cargo test   --quiet --target x86_64-unknown-linux-musl
            cargo build  --quiet --release --target x86_64-unknown-linux-musl

  build_aarch64:
    name: Build aarch64
    runs-on: ubuntu-latest

    needs: build_x86_64

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: code/target/
          key: ${{ github.ref }}

      - name: Build
        uses: devcontainers/ci@v0.3
        with:
          push: never
          configFile: .devcontainer/development/devcontainer.json
          env: |
            CARGO_HOME=${{ env.CARGO_HOME }}
            RUSTUP_HOME=${{ env.RUSTUP_HOME }}
          runCmd: |
            sudo apt-get --yes --quiet=2 update
            sudo apt-get --yes install gcc gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

            cd code
            cargo build --quiet --release --target aarch64-unknown-linux-musl

  publish:
    name: Publish
    runs-on: ubuntu-latest

    needs: build_aarch64
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: read
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: code/target/
          key: ${{ github.ref }}

      - name: Prepare Binaries
        run: |
          cp target/x86_64-unknown-linux-musl/release/hermes \
            target/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl

          cp target/aarch64-unknown-linux-musl/release/hermes \
            target/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            code/target/hermes-${{ github.ref_name }}-aarch64-unknown-linux-musl
            code/target/hermes-${{ github.ref_name }}-x86_64-unknown-linux-musl
