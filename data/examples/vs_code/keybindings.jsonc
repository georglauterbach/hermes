// ------------------------------------------------------------------
// # User-Configured Keybindings
//
// Ctrl       => peek/show
// Ctrl+Shift => go to
//
// ## Keys
//
// "[BracketLeft]" = "ü"
// "[Semicolon"]"  = "ö"
// "[Quote]"       = "ä"
// "[Equal]"       = "`"
// ------------------------------------------------------------------
[
  // ? CODE NAVIGATION
  {
    // show hover
    "key": "ctrl+[BracketLeft]",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    // peek declaration
    "key": "ctrl+[Quote]",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    // go to declaration
    "key": "ctrl+shift+[Quote]",
    "command": "editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  // ? CODE ADJUSTMENTS
  {
    // format document
    "key": "ctrl+shift+i",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    // rename symbol
    "key": "ctrl+k ctrl+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    // -default(rename symbol)
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    // -default(rename symbol)
    "key": "ctrl+k ctrl+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  // ? CURSOR
  {
    // multi-cursor up
    "key": "ctrl+shift+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    // -default(multi-cursor up)
    "key": "ctrl+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    // multi-cursor down
    "key": "ctrl+shift+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    // -default(multi-cursor down)
    "key": "ctrl+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  // ? TERMINAL
  {
    // create & show new terminal
    "key": "ctrl+shift+[Equal]",
    "command": "workbench.action.terminal.new"
  },
  {
    // show terminal pane
    "key": "ctrl+[Equal]",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    // -default(show terminal pane)
    "key": "ctrl+[Equal]",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    // maximize terminal pane
    "key": "ctrl+alt+[Equal]",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    // -default(show terminal pane)
    "key": "ctrl+[Semicolon]",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    // -default(show terminal pane)
    "key": "ctrl+shift+[Equal]",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    // kill terminal
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // ? SEARCH & NORMAL NAVIGATION
  {
    // show quick search
    "key": "ctrl+alt+space",
    "command": "workbench.action.quickTextSearch"
  },
  {
    // -default(show quick search)
    "key": "ctrl+alt+space",
    "command": "-toggleSuggestionFocus",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    // quick open (go to file)
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    // -default(quick open)
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    // -default(quick open)
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    // show bottom pane
    "key": "ctrl+[Semicolon]",
    "command": "workbench.action.togglePanel"
  },
  {
    // -default(show bottom pane)
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    // show "problems" pane
    "key": "ctrl+shift+[Semicolon]",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  // ? COMMAND RUNNER
  {
    "key": "ctrl+shift+alt+p",
    "command": "workbench.action.tasks.runTask"
  },
  // ? FILE EXPLORER
  {
    // create new file
    "key": "ctrl+alt+n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus"
  },
  {
    // create new directory
    "key": "ctrl+shift+alt+n",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus"
  },
  // ? REMOVED
  // copilot BS
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-workbench.action.chat.applyInEditor",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "key": "ctrl+enter",
    "command": "-workbench.action.chat.insertCodeBlock",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-chatEditor.action.accept",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  }
]
