#! /usr/bin/env bash

#          task  initialize hermes
#    sourced by  ${HOME}/.bashrc

# ! DO NOT EDIT THIS FILE - USE ${HOME}/.config/bash/91-hermes_settings.sh INSTEAD
# ! THIS FILE IS OVERWRITTEN WHEN HERMES IS UPDATED

function __is_command() {
  command -v "${1:?Command name required in __is_command}" &>/dev/null
}

function __evaluates_to_true() {
  local -n INPUT=${1:?Input for evaluation required in __evaluates_to_true}
  [[ -v ${1} ]] && [[ ${INPUT,,} == 'true' ]]
}

export -f __is_command __evaluates_to_true

if [[ ${-} == *i* ]]; then
  if [[ -f ${HOME}/.config/bash/91-hermes_settings.sh ]]; then
    # shellcheck source=91-hermes_settings.sh
    source "${HOME}/.config/bash/91-hermes_settings.sh"
  fi

  # -----------------------------------------------
  # ----  ble.sh  ---------------------------------
  # -----------------------------------------------

  HERMES_BLE_SOURCE=${HERMES_BLE_SOURCE:-${HOME}/.local/share/blesh/ble.sh}
  if __evaluates_to_true HERMES_INIT_BLE_SH && [[ -e ${HERMES_BLE_SOURCE} ]]; then
    # The setup of ble.sh should be done as early as possible and outside of a function.
    # ref: https://github.com/akinomyoga/ble.sh?tab=readme-ov-file#13-set-up-bashrc
    #
    # shellcheck source=/dev/null
    source "${HERMES_BLE_SOURCE}" --attach=none
  fi

  # -----------------------------------------------
  # ----  Miscellaneous ---------------------------
  # -----------------------------------------------

  function __hermes__setup_path() {
    local LOOP_VAR_PATH
    export PATH=${PATH:-/bin}

    for LOOP_VAR_PATH in "${HOME}/bin" "${HOME}/.local/bin"; do
      if [[ -d ${LOOP_VAR_PATH} ]] && [[ ${PATH} != *${LOOP_VAR_PATH}* ]]; then
        PATH="${LOOP_VAR_PATH}:${PATH}"
      fi
    done

    # shellcheck disable=SC2066
    for LOOP_VAR_PATH in "${HOME}/.cargo/env"; do
      if [[ -e ${LOOP_VAR_PATH} ]] && [[ -r ${LOOP_VAR_PATH} ]]; then
        # shellcheck source=/dev/null
        source "${LOOP_VAR_PATH}"
      fi
    done
  }

  function __hermes__setup_variables() {
    # shell options
    shopt -s checkwinsize globstar autocd

    # miscellaneous environment variables
    if [[ ! -v VISUAL ]]; then
      if   __is_command 'nvim'; then VISUAL='nvim'
      elif __is_command 'vim' ; then VISUAL='vim'
      elif __is_command 'vi'  ; then VISUAL='vi'
      else VISUAL=nano
      fi
    fi

    command -v less &>/dev/null && PAGER=${PAGER:-$(command -v less) -R}
    EDITOR=${EDITOR:-${VISUAL}}
    GPG_TTY=$(tty)
    HERMES_LOADED=true
    export VISUAL EDITOR PAGER GPG_TTY HERMES_LOADED

    if [[ ! -v LANG ]]; then
      # shellcheck source=/dev/null
      [[ -e /etc/locale.conf ]] && source /etc/locale.conf
      export LANG=${LANG:-C.UTF-8}
      export LANGUAGE=${LANGUAGE:-${LANG}}
      export LC_ALL=${LC_ALL:-${LANG}}
    fi
  }

  function __hermes__setup_completion() {
    shopt -oq posix && return 0

    if [[ -r ${XDG_CONFIG_HOME:-${HOME}/.config}/bash_completion ]]; then
      # shellcheck source=/dev/null
      source "${XDG_CONFIG_HOME:-${HOME}/.config}/bash_completion"
    fi

    if [[ -r /usr/share/bash-completion/bash_completion ]]; then
      # shellcheck source=/dev/null
      source /usr/share/bash-completion/bash_completion
    fi
  }

  function __hermes__setup_prompt() {
    if __evaluates_to_true HERMES_INIT_STARSHIP && __is_command 'starship'; then
      [[ -v STARSHIP_CONFIG ]] || STARSHIP_CONFIG="${HOME}/.config/starship/starship.toml"
      export STARSHIP_CONFIG
      eval "$(starship init bash || :)"
    else
      export PROMPT_DIRTRIM=4
      export PS2=''   # continuation shell prompt
      export PS4='> ' # `set -x` tracing prompt

      # shellcheck disable=SC2155
      [[ ! -v debian_chroot ]] && [[ -r /etc/debian_chroot ]] && export debian_chroot=$(</etc/debian_chroot)
    fi
  }

  function __hermes__setup_history() {
    function __hermes__init_default_history() {
      export HISTFILE=${HISTFILE:-${HOME}/.bash_history}
      export HISTCONTROL=${HISTCONTROL:-ignoreboth}
      export HISTSIZE=${HISTSIZE:-10000}
      export HISTFILESIZE=${HISTFILESIZE:-10000}

      shopt -s histappend
      [[ -v BLE_VERSION ]] && bleopt history_share=yes
    }

    if ! __evaluates_to_true HERMES_INIT_ATUIN || ! __is_command 'atuin'; then
      __hermes__init_default_history
      return 0
    fi

    # Using Atuin only works with Bash preexec.sh or ble.sh. When ble.sh has been initialized before,
    # Atuin will hook into ble.sh. One must not enable Atuin, though, if ble.sh is not configured
    # (because this may break other programs, like StarShip).
    #
    # ref: https://docs.atuin.sh/guide/installation/#installing-the-shell-plugin
    if [[ ! -v BLE_VERSION ]]; then
      echo 'hermes: loading Atuin without ble.sh does not work (falling back to normal history)' >&2
      __hermes__init_default_history
      return 0
    fi

    export HISTFILE=${HERMES_CONFIG_ATUIN_WITH_HISTFILE:-/dev/null}
    if [[ ${HISTFILE} == '/dev/null' ]]; then
      shopt -u histappend
      unset HISTCONTROL HISTSIZE HISTFILESIZE
    else
      __hermes__init_default_history
    fi

    local ATUIN_INIT_ARGUMENTS=()
    __evaluates_to_true HERMES_CONFIG_ATUIN_DISABLE_UP_ARROW && ATUIN_INIT_ARGUMENTS+=('--disable-up-arrow')
    if __evaluates_to_true HERMES_CONFIG_ATUIN_DISABLE_CTRL_F; then
      ATUIN_INIT_ARGUMENTS+=('--disable-ctrl-r')
      bind -x '"\C-e": __atuin_history' # CTRL+e will bring up Atuin
    fi

    # shellcheck source=/dev/null
    source <(atuin init bash "${ATUIN_INIT_ARGUMENTS[@]}")

    if [[ -n ${HERMES_CONFIG_ATUIN_DB_FILE:-} ]]; then
      sed -i -E "s|(# )?db_path.*|db_path = \"${HERMES_CONFIG_ATUIN_DB_FILE}\"|" \
        "${XDG_CONFIG_HOME:-${HOME}/.config}/atuin/config.toml"
    fi
  }

  for __FUNCTION in 'path' 'variables' 'completion' 'prompt' 'history'; do
    "__hermes__setup_${__FUNCTION}" || :
    unset "__hermes__setup_${__FUNCTION}"
  done

  # -----------------------------------------------
  # ----  Extra Programs  -------------------------
  # -----------------------------------------------

  if __evaluates_to_true HERMES_INIT_BAT && __is_command 'bat'; then
    [[ -v PAGER ]] && export BAT_PAGER=${PAGER}
    BAT_COMMON_ARGUMENTS='--style=plain'
    export MANPAGER="bash -c 'col -bx | bat ${BAT_COMMON_ARGUMENTS} --language=man'"
    export MANROFFOPT='-c'
    export BAT_THEME_DARK='gruvbox-material-dark'
    export BAT_THEME_LIGHT='everforest-light'
  fi

  if __evaluates_to_true HERMES_INIT_FZF && __is_command 'fzf'; then
    # ref: https://github.com/akinomyoga/blesh-contrib/blob/master/integration/fzf.md
    if [[ -v BLE_VERSION ]]; then
      ble-import --delay 'integration/fzf-completion'
      ble-import --delay 'integration/fzf-key-bindings'
    else
      # shellcheck source=/dev/null
      source <(fzf --bash)
    fi
  fi

  if __evaluates_to_true HERMES_INIT_ZOXIDE && __is_command 'zoxide'; then
    # shellcheck source=/dev/null
    source <(zoxide init bash)
    [[ -v BLE_VERSION ]] && ble-import --delay 'integration/zoxide'
  fi

  # -----------------------------------------------
  # ----  Command Overrides  ----------------------
  # -----------------------------------------------

  if __evaluates_to_true HERMES_OVERRIDE_CAT_WITH_BAT && __is_command 'bat'; then
    # shellcheck disable=SC2139
    alias cat="bat --paging=never ${BAT_COMMON_ARGUMENTS}"
  fi

  if __evaluates_to_true HERMES_OVERRIDE_CD_WITH_ZOXIDE && __is_command 'zoxide'; then
    alias cd='z'
  fi

  if __evaluates_to_true HERMES_OVERRIDE_DIFF_WITH_DELTA && __is_command 'delta'; then
    alias diff='delta --line-numbers'
  fi

  if __evaluates_to_true HERMES_OVERRIDE_FIND_WITH_FD && __is_command 'fd'; then
    alias find='fd'
  fi

  if __evaluates_to_true HERMES_OVERRIDE_GREP_WITH_RIPGREP && __is_command 'rg'; then
    alias grep='rg'
  fi

  if __evaluates_to_true HERMES_OVERRIDE_LESS_WITH_BAT && __is_command 'bat'; then
    # shellcheck disable=SC2139
    alias less="bat ${BAT_COMMON_ARGUMENTS} --paging=always"
  fi

  if __evaluates_to_true HERMES_OVERRIDE_LS_WITH_EZA && __is_command 'eza'; then
    alias ls='eza --header --long --binary --group --classify --extended --group-directories-first'
  fi

  if __evaluates_to_true HERMES_OVERRIDE_Y_WITH_YAZI && __is_command 'yazi'; then
    function y() {
      local YAZI_TMP_FILE YAZI_CWD ; YAZI_TMP_FILE="$(mktemp -t "yazi-cwd.XXXXXX")" ;
      yazi "${@}" --cwd-file="${YAZI_TMP_FILE}"
      IFS= read -r -d '' YAZI_CWD < "${YAZI_TMP_FILE}"
      [[ -n ${YAZI_CWD:-} ]] && [[ ${YAZI_CWD} != "${PWD}" ]] && { builtin cd -- "${YAZI_CWD}" || return 1 ; }
      rm --force -- "${YAZI_TMP_FILE}"
    }
  fi

  # -----------------------------------------------
  # ----  Global Aliases  -------------------------
  # -----------------------------------------------

  if __evaluates_to_true HERMES_LOAD_GLOBAL_ALIASES; then
    alias lsa='ls -a'

    alias ..='cd ..'
    alias ...='cd ../..'
    alias ....='cd ../../..'
    alias .....='cd ../../../..'
    alias ......='cd ../../../../..'
    alias .......='cd ../../../../../..'
  fi

  # -----------------------------------------------
  # ----  Finalization  ---------------------------
  # -----------------------------------------------

  if [[ -v BLE_VERSION ]]; then
    ble-attach
  fi
fi
