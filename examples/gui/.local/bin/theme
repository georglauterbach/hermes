#! /usr/bin/env -S bash -eE -u -o pipefail -O inherit_errexit

function log_info() {
  echo -e "\033[1;34mINFO\033[0m  ${1:?Log info message required}"
}

function log_warn() {
  echo -e "\033[1;33mWARN\033[0m  ${1:?Log warning message required}" >&2
  ERROR_OCCURRED=true
}

function set_theme_alacritty() {
  local CONFIG_FILE="${HOME}/.config/alacritty/30-colors-${THEME_NAME_COMPLETE}.toml"

  if [[ -f ${CONFIG_FILE} ]]; then
    log_info 'Updating Alacritty configuration'
    if ! ln --symbolic --force \
      "${CONFIG_FILE}" \
      "${HOME}/.config/alacritty/33-colors_active.toml"; then
      log_warn 'Could not update color theme of Alacritty'
    fi
  fi
}

function set_theme_rofi() {
  local CONFIG_FILE="${HOME}/.config/rofi/config.rasi"

  if [[ -f ${CONFIG_FILE} ]]; then
    log_info 'Updating Rofi configuration'
    if ! sed --in-place --regexp-extended \
      "s/(theme )\".*\"/\1\"${THEME_NAME_COMPLETE}\"/" \
      "${CONFIG_FILE}"; then
      log_warn 'Could not update color theme of Rofi'
    fi
  fi
}

function set_theme_swaylock() {
  local CONFIG_FILE="${HOME}/.config/swaylock/${THEME_NAME_COMPLETE}"

  if [[ -f ${CONFIG_FILE} ]]; then
    log_info 'Updating Swaylock configuration'
    if ! ln --symbolic --force "${CONFIG_FILE}" "${HOME}/.config/swaylock/config"; then
      Log_warn 'Could not update color theme of Swaylock'
    fi
  fi
}

function set_theme_zellij() {
  local CONFIG_FILE="${HOME}/.config/zellij/config.kdl"

  if [[ -f ${CONFIG_FILE} ]]; then
    log_info 'Updating Zellij configuration'
    if ! sed --in-place --regexp-extended \
      "s/(theme )\".*\"/\1\"${THEME_NAME_COMPLETE}-custom\"/" \
      "${CONFIG_FILE}"; then
      log_warn 'Could not update color theme of Zellij'
    fi
  fi
}

function set_theme_regolith() {
  log_info "Updating Regolith look to $(tput bold)${THEME_NAME}$(tput sgr0)"
  regolith-look set "${THEME_NAME_COMPLETE}" >/dev/null &
  readonly REGOLITH_LOOK_PID=${!}

  log_info "Updating preferred color palette to $(tput bold)${THEME_PALETTE}$(tput sgr0)"
  gsettings set 'org.gnome.desktop.interface' 'color-scheme' "prefer-${THEME_PALETTE}"
}

function main() {
  local FLAG_FORCE=0
  local THEME_PALETTE THEME_NAME THEME_NAME_COMPLETE
  
  if [[ ${*} == *--force* ]]; then
    FLAG_FORCE=1
  fi

  case "${1:-dark}" in
    ( 'd' | 'dark' )
      readonly THEME_PALETTE='dark'
      readonly THEME_NAME='gruvbox-material'
      ;;

    ( 'l' | 'light' )
      readonly THEME_PALETTE='light'
      readonly THEME_NAME='everforest'
      ;;

    ( * )
      echo "'${1}' is not a valid option - use 'light|l' or 'dark|d'" >&2
      exit 1
      ;;
  esac

  readonly THEME_NAME_COMPLETE="${THEME_NAME}-${THEME_PALETTE}"

  set_theme_regolith

  set_theme_alacritty
  set_theme_rofi
  set_theme_swaylock
  set_theme_zellij

  wait -f "${REGOLITH_LOOK_PID}" || :

  if [[ ${FLAG_FORCE} -eq 1 ]]; then
    log_info 'Restarting kanshi (forced)'
    systemctl --user restart 'regolith-init-kanshi'
  fi

  if ${ERROR_OCCURRED:-false}; then
    exit 1
  else
    exit 0
  fi
}

main "${@}"
